<link href="{{ 'ymm-filter.css' | asset_url }}" rel="stylesheet" text="text/css" >

<!-- vehicle-search.liquid -->
<div class="ymm-filter">
 <label class="ymm-title">Search for Parts That Fit Your Vehicle</label>
 <div class="ymm-inner-filter">
  <select id="ymm-make" class="ymm-dropdown">
    <option value="">- Make -</option>
    {% comment %} These would typically come from your vehicle data {% endcomment %}
    <option value="Toyota">Toyota</option>
    <option value="Honda">Honda</option>
    <option value="Ford">Ford</option>
    <option value="Tata">Tata</option>
  </select>

  <select id="ymm-model" class="ymm-dropdown" disabled>
    <option value="">- Model -</option>
  </select>

  <select id="ymm-year" class="ymm-dropdown" disabled>
    <option value="">- Year -</option>
  </select>

  <button class="ymm-search-button" onclick="handleSearch()">Search</button>
  <a href="#" class="ymm-clear-link" onclick="clearFilters()">Clear filters</a>
</div>
</div>

<script>
  let ymmData = {}; // Store make-model mapping

  document.addEventListener("DOMContentLoaded", async () => {
    const makeSelect = document.getElementById("ymm-make");
    const modelSelect = document.getElementById("ymm-model");
    const yearSelect = document.getElementById("ymm-year");

    // Populate years (2000 to 2025)
    yearSelect.innerHTML = '<option value="">- Year -</option>';
    for (let year = 2000; year <= 2025; year++) {
      yearSelect.innerHTML += `<option value="${year}">${year}</option>`;
    }

    // Fetch make-model data from API
    try {
      const res = await fetch("https://esaymaster.vercel.app/api/make-model");
      const data = await res.json();
      console.log("data",data)
      ymmData = {};

      // Populate Make dropdown and build ymmData map
      makeSelect.innerHTML = '<option value="">- Make -</option>';
      data.makes.forEach((make) => {
        ymmData[make.name] = make.models.map((model) => model.name);
        makeSelect.innerHTML += `<option value="${make.name}">${make.name}</option>`;
      });
    } catch (error) {
      console.error("Error fetching vehicle data:", error);
    }

    makeSelect.addEventListener("change", () => {
      const selectedMake = makeSelect.value;
      modelSelect.innerHTML = '<option value="">- Model -</option>';
      modelSelect.disabled = true;
      yearSelect.value = '';
      yearSelect.disabled = true;

      if (!selectedMake || !ymmData[selectedMake]) return;

      // Populate Model dropdown
      ymmData[selectedMake].forEach((model) => {
        modelSelect.innerHTML += `<option value="${model}">${model}</option>`;
      });
      modelSelect.disabled = false;
    });

    modelSelect.addEventListener("change", () => {
      if (modelSelect.value) {
        yearSelect.disabled = false;
      } else {
        yearSelect.value = '';
        yearSelect.disabled = true;
      }
    });
  });

  function handleSearch() {
    const make = document.getElementById('ymm-make').value;
    const model = document.getElementById('ymm-model').value;
    const year = document.getElementById('ymm-year').value;

    if (!make) return alert('Please select a make');
    if (!model) return alert('Please select a model');
    if (!year) return alert('Please select a year');

    const cleanMake = make.trim().replace(/\s+/g, '-').toLowerCase();
    const cleanModel = model.trim().replace(/\s+/g, '-').toLowerCase();
    const cleanYear = year.toString().trim();

    const vehiclePath = `${cleanMake}-${cleanModel}-${cleanYear}`;
    const defaultCollection = "{{ section.settings.default_collection | default: 'all' }}";

    window.location.href = `/collections/${defaultCollection}/${vehiclePath}`;
  }

  function clearFilters() {
    document.getElementById('ymm-make').selectedIndex = 0;
    document.getElementById('ymm-model').innerHTML = '<option value="">- Model -</option>';
    document.getElementById('ymm-model').disabled = true;
    document.getElementById('ymm-year').value = '';
    document.getElementById('ymm-year').disabled = true;
  }
</script>

{% schema %}
{
  "name": "Vehicle Search Filter",
  "target": "section",
  "settings": [
    {
      "type": "text",
      "id": "default_collection",
      "label": "Default Collection",
      "default": "all",
      "info": "The collection to search when filters are applied"
    }
  ]
}
{% endschema %}